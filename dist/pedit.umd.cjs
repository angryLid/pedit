(function(l,o){typeof exports=="object"&&typeof module<"u"?o(exports,require("jszip"),require("fast-xml-parser")):typeof define=="function"&&define.amd?define(["exports","jszip","fast-xml-parser"],o):(l=typeof globalThis<"u"?globalThis:l||self,o(l.pedit={},l.JSZip,l.fastXmlParser))})(this,function(l,o,u){"use strict";const S=new u.XMLParser({ignoreAttributes:!1,isArray:n=>["p:sp","p:pic","p:graphicFrame","p:grpSp","c:ser","a:tr","a:tc"].indexOf(n)!==-1}),P=new u.XMLBuilder({ignoreAttributes:!1}),O=async(n,t)=>{const s=n.file(t);if(!s)throw new Error(`No such file: ${t}`);const e=await s.async("uint8array"),r=await o.loadAsync(e);return{async loadXml(i){return v(r,i)},async save(){const i=await r.generateAsync({type:"uint8array"});n.file(t,i)}}},v=async(n,t)=>{const s=n.file(t);if(!s)throw new Error(`No such file: ${t}`);const e=await s.async("string"),r=S.parse(e);return{get(){return r},modify(i){i(r);const a=P.build(r);n.file(t,a)}}},m=v,g=n=>n.replace(/(slide|chart)\d+\.xml/,t=>`_rels/${t}.rels`),x=n=>n.replace(/\.\./,"ppt");class C{constructor(t,s){this.ele=t,this.slide=s,this.shapeType="chart",this.id=t["p:nvGraphicFramePr"]["p:cNvPr"]["@_id"],this.name=t["p:nvGraphicFramePr"]["p:cNvPr"]["@_name"]}async setValue(t,s,e){var z;const r=this.ele["a:graphic"]["a:graphicData"]["c:chart"]["@_r:id"],i=g(this.slide.filename),a=this.slide.pptxFile.zip,c=(await m(a,i)).get().Relationships.Relationship.find(p=>p["@_Id"]===r);if(!c)throw new Error("relationship not found");const X=c["@_Target"],j=x(X),T=await m(a,j);T.modify(p=>{const f=p["c:chartSpace"]["c:chart"]["c:plotArea"];"c:pieChart"in f?f["c:pieChart"]["c:ser"][t-1]["c:val"]["c:numRef"]["c:numCache"]["c:pt"][s-1]["c:v"]=e:"c:lineChart"in f?f["c:lineChart"]["c:ser"][t-1]["c:val"]["c:numRef"]["c:numCache"]["c:pt"][s-1]["c:v"]=e:"c:barChart"in f&&(f["c:barChart"]["c:ser"][t-1]["c:val"]["c:numRef"]["c:numCache"]["c:pt"][s-1]["c:v"]=e)});const E=g(j),$=await m(a,E),I=T.get()["c:chartSpace"]["c:externalData"]["@_r:id"],A=(z=$.get().Relationships.Relationship.find(p=>p["@_Id"]===I))==null?void 0:z["@_Target"];if(!A)throw new Error("relationship not found");const M=x(A),F=await O(a,M);(await F.loadXml("xl/worksheets/sheet1.xml")).modify(p=>{p.worksheet.sheetData.row[t].c[s].v=e}),await F.save()}}class b{constructor(t){this.xmlObj=t,this.shapeType="text",this.id=t["p:nvSpPr"]["p:cNvPr"]["@_id"],this.name=t["p:nvSpPr"]["p:cNvPr"]["@_name"]}setText(t){Array.isArray(this.xmlObj["p:txBody"]["a:p"])&&(this.xmlObj["p:txBody"]["a:p"]=this.xmlObj["p:txBody"]["a:p"][0]),Array.isArray(this.xmlObj["p:txBody"]["a:p"]["a:r"])&&(this.xmlObj["p:txBody"]["a:p"]["a:r"]=this.xmlObj["p:txBody"]["a:p"]["a:r"][0]),this.xmlObj["p:txBody"]["a:p"]["a:r"]?this.xmlObj["p:txBody"]["a:p"]["a:r"]["a:t"]=t:this.xmlObj["p:txBody"]["a:p"]={"a:pPr":{"@_algn":"ctr"},"a:r":{"a:t":t,"a:rPr":{"@_kumimoji":"1","@_lang":"en-US","@_altLang":"zh-CN","@_dirty":"0"}}}}}class y{constructor(t){this.xmlObj=t,this.shapeType="group",this.id=t["p:nvGrpSpPr"]["p:cNvPr"]["@_id"],this.name=t["p:nvGrpSpPr"]["p:cNvPr"]["@_name"]}get children(){var e,r;const t=((e=this.xmlObj["p:sp"])==null?void 0:e.map(i=>new b(i)))||[],s=((r=this.xmlObj["p:grpSp"])==null?void 0:r.map(i=>new y(i)))||[];return{*[Symbol.iterator](){yield*[...t,...s]}}}}class B{constructor(t,s){this.ele=t,this.slide=s,this.shapeType="image",this.id=t["p:nvPicPr"]["p:cNvPr"]["@_id"],this.name=t["p:nvPicPr"]["p:cNvPr"]["@_name"]}async setImage(t){var d;const s=this.slide.pptxFile.zip,e=this.ele["p:blipFill"]["a:blip"]["@_r:embed"],r=g(this.slide.filename),a=(d=(await m(this.slide.pptxFile.zip,r)).get().Relationships.Relationship.find(c=>c["@_Id"]===e))==null?void 0:d["@_Target"];if(!a)throw new Error("target Not Found");const h=x(a);s.file(h,t),console.log("%c [imagePath]:","background:linear-gradient(#69c,#258, #69c);color:#fff;font-size:14px",h)}}class R{constructor(t){this.ele=t,this.shapeType="table",this.id=t["p:nvGraphicFramePr"]["p:cNvPr"]["@_id"],this.name=t["p:nvGraphicFramePr"]["p:cNvPr"]["@_name"]}get children(){return this.ele["a:graphic"]["a:graphicData"]["a:tbl"]["a:tr"],{*[Symbol.iterator](){yield new Number(2)}}}getCells(){const t=this.ele["a:graphic"]["a:graphicData"]["a:tbl"],s=[];for(let e=0;e<t["a:tr"].length;e++){const r=[];for(let i=0;i<t["a:tr"][e]["a:tc"].length;i++){const a=t["a:tr"][e]["a:tc"][i];a["@_vMerge"]?r.push(t["a:tr"][e-a["@_vMerge"]]["a:tc"][i]):a["@_hMerge"]?r.push(t["a:tr"][e]["a:tc"][i-a["@_hMerge"]]):r.push(a)}s.push(r)}return s}setValue(t,s,e){const i=this.getCells()[t-1][s-1]["a:txBody"];Array.isArray(i["a:p"])&&(i["a:p"]=i["a:p"][0]);const a=i["a:p"];Array.isArray(a["a:r"])&&(a["a:r"]=a["a:r"][0]),a["a:r"]&&(a["a:r"]["a:t"]=e.toString())}}class _{constructor(t,s,e){this.filename=s,this.pptxFile=e;const r=S.parse(t);this.xmlObj=r}*[Symbol.iterator](){var i,a,h,d;const t=((i=this.xmlObj["p:sld"]["p:cSld"]["p:spTree"]["p:sp"])==null?void 0:i.map(c=>new b(c)))||[],s=((a=this.xmlObj["p:sld"]["p:cSld"]["p:spTree"]["p:grpSp"])==null?void 0:a.map(c=>new y(c)))||[],e=((h=this.xmlObj["p:sld"]["p:cSld"]["p:spTree"]["p:graphicFrame"])==null?void 0:h.map(c=>"c:chart"in c["a:graphic"]["a:graphicData"]?new C(c,this):new R(c)))||[],r=((d=this.xmlObj["p:sld"]["p:cSld"]["p:spTree"]["p:pic"])==null?void 0:d.map(c=>new B(c,this)))||[];yield*[...t,...s,...e,...r]}getShapeById(t){throw new Error(t.toString())}generateXmlString(){return P.build(this.xmlObj)}}class w{constructor(t){this.modifiedSlides=new Set,this.zip=t}static async fromFile(t){const s=await o.loadAsync(t);return new w(s)}async getSlide(t){if(t<1||t>2e3||Number.isNaN(t)||t.toString().includes("."))throw new Error("Page number is invalid.");try{const e=this.zip.file(`ppt/slides/slide${t}.xml`);if(!e)throw new Error(`Page ${t} doesn't exists.`);const r=await e.async("string"),i=new _(r,`ppt/slides/slide${t}.xml`,this);return this.modifiedSlides.add(i),i}catch{throw new Error(`Page ${t} doesn't exists.`)}}async getChart(t){if(t<1||t>2e3||Number.isNaN(t)||t.toString().includes("."))throw new Error("Page number is invalid.");try{const e=this.zip.file(`ppt/charts/chart${t}.xml`);if(!e)throw new Error(`Page ${t} doesn't exists.`);const r=await e.async("string"),i=new _(r,`ppt/slides/slide${t}.xml`,this);return this.modifiedSlides.add(i),i}catch{throw new Error(`Page ${t} doesn't exists.`)}}async generate(){const t=this.zip;for(const e of this.modifiedSlides){const r=e.generateXmlString();t.file(e.filename,r)}return await t.generateAsync({type:"uint8array"})}}l.PptxFile=w,Object.defineProperty(l,Symbol.toStringTag,{value:"Module"})});
